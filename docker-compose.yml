services:
  backend:
    build:
      context: ./backend/
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend/:/usr/src/app
    ports:
      - '4000:4000'
      - '4001:4001'
    depends_on:
      mongo:
        condition: service_healthy
  backend-internal:
    build:
      context: ./backend-internal/
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend-internal/:/usr/src/app
    ports:
      - '4002:4002'
    depends_on:
      postgres:
        condition: service_healthy
  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend/:/usr/src/app
    ports:
      - '3000:3000'
  frontend-admin:
    build:
      context: ./frontend-admin/
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend-admin/:/usr/src/app
    ports:
      - '3001:3000'
  mongo:
    image: mongo
    restart: always
    volumes:
      - /data/db-mongo/:/data/db/
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: test
    ports:
      - '27017:27017'
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - '5000:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=test@example.com
      - PGADMIN_DEFAULT_PASSWORD=test
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: bitnami/postgresql
    restart: always
    volumes:
      - /data/db-postgres/:/bitnami/postgresql
    environment:
      - POSTGRESQL_USERNAME=tester
      - POSTGRESQL_PASSWORD=test
      - POSTGRESQL_DATABASE=test_database
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
  kafka:
    image: bitnami/kafka
    restart: always
    volumes:
      - /data/kafka/:/bitnami/kafka
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
